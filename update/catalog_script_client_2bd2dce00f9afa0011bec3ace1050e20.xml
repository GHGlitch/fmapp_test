<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>set</applies_to>
        <cat_item/>
        <cat_variable/>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <messages/>
        <name>Load Update  Order</name>
        <order/>
        <script><![CDATA[function onLoad() {
    
    var ga;
    var gURL = new GlideURL();
    gURL.setFromCurrent();
    var pURL = parent.document.URL;
    
    // Fill Record Producer ID
    var order = gURL.getParam('sysparm_order_id');
    var sysId = gURL.getParam('sysparm_id');
    var hasReservation = gURL.getParam('sysparm_has_reservation');
    
    if (sysId == '' || sysId == null) {
        if (pURL.indexOf("&sysparm_id=")>=1) {
            var o_match = pURL.match(/&sysparm_id=([a-fA-F0-9]+)/);
            sysId = o_match[1];
        }
    }
    
    g_form.setValue('producer_id', sysId);
    
    if (order == '' || order == null) {
        if (pURL.indexOf("&sysparm_order_id=")>=1) {
            var o_match = pURL.match(/&sysparm_order_id=([a-fA-F0-9]+)/);
            order = o_match[1];
        }
    }
    
    // If updating
    if (typeof order !== "undefined") {
        
        g_form.setValue('order_id', order);
        ga = new GlideAjax('FMFOrderAjaxUtils');
        ga.addParam('sysparm_name', 'getFOInfo');
        ga.addParam('sysparm_facility_order', order);
        ga.getXML(function(response) {
            
            var answer = response.responseXML.documentElement.getAttribute('answer');
			
            var obj = JSON.parse(answer);
            setRPVariables(obj);
            
            g_form.setValue('date', obj.expected_start);
            if (g_form.getValue('start_hours') != '') {
                g_form.setValue('date', obj.date);
                g_form.setValue('end_date', obj.end_date);
                g_form.setValue('start_hours', obj.start_hour);
                g_form.setValue('end_hours', obj.end_hour);
                g_form.setValue('start_minutes', obj.start_min);
                g_form.setValue('end_minutes', obj.end_min);
				
				var startTime = obj.start_hour + ':' + obj.start_min;
				var endTime = obj.end_hour + ':' + obj.end_min;
				g_form.setValue('start_time', startTime);
				g_form.setValue('end_time', endTime);
            }
           
            g_form.setValue('requester', obj.requester);
            g_form.setValue('location', obj.location);
            g_form.setValue('room', obj.room);
            g_form.setValue('costcenter', obj.costcenter);
            g_form.setValue('fmsystem_recurring', obj.recurring_reservation);
			g_form.setValue('description', obj.description);
            if (obj.has_reservation === 'true') {
                alert(getMessage('fm_update_facility_order_hide_fields'));
                g_form.addInfoMessage(getMessage('fm_update_facility_order_hide_fields'));
                
                if (g_form.getValue('start_hours')) {
					for (var i = parseInt(obj.rrstart_hour) - 1; i >= 0; i--) {
						if(i.toString().length == 1) {
							i = '0' + '' + i;
						}
						g_form.removeOption('start_hours', i+'');
						g_form.removeOption('end_hours', i+'');
					}
					for (var j = parseInt(obj.rrend_hour) + 1; j <= 23; j++) {
						if(j.toString().length == 1) {
							j = '0' + '' + j;
						}
						g_form.removeOption('start_hours', j+'');
						g_form.removeOption('end_hours', j+'');
					}
                }
				
                if (g_form.getValue('end_date') != undefined) {
                    g_form.setMandatory('end_date', false);
                    g_form.setReadOnly('end_date', true);
                }
                g_form.setReadOnly('room', true);
                g_form.setReadOnly('requester', true);
                g_form.setMandatory('location', false);
                g_form.setReadOnly('location', true);
                g_form.setMandatory('costcenter', false);
                g_form.setReadOnly('costcenter', true);
                g_form.setMandatory('date', false);
                g_form.setReadOnly('date', true);
                
            }
			
			if (obj.category == '10'){
				getItemReservation(order);
			}
            
        });
    }
    
    // Get the context reservation for this order
    var reservationData = g_user.getClientData('fm_reservation');
    var reservation = reservationData == undefined ? '': JSON.parse(reservationData);
    
    // If available get the data from this reservation
    if (reservation){
        
        if (reservation.recurring == 'false') g_form.setValue('fmsystem_recurring', false);
        
        console.debug('Recurring', g_form.getValue('fmsystem_recurring'));
        
        var gar = new GlideAjax('x_lsmcb_fm.FMRoomReservationAjaxUtils');
        gar.addParam('sysparm_name', 'getReservationInfo');
        gar.addParam('sysparm_reservation_id', reservation.id);
        
        g_form.setValue('reservation_id', reservation.id);
        gar.getXML(function(response) {
            
            var answer = response.responseXML.documentElement.getAttribute("answer");
            if(answer) {
                
                var obj = JSON.parse(answer);
                if (g_form.getValue('start_hours') && g_form.getValue('end_hours')) {
					
					for (var i = parseInt(obj.start_hour) - 1; i >= 0; i--) {
						if(i.toString().length == 1) {
							i = '0' + '' + i;
						}
						g_form.removeOption('start_hours', i+'');
						g_form.removeOption('end_hours', i+'');
					}
					for (var j = parseInt(obj.end_hour) + 1; j <= 23; j++) {
						if(j.toString().length == 1) {
							j = '0' + '' + j;
						}
						g_form.removeOption('start_hours', j+'');
						g_form.removeOption('end_hours', j+'');
					}
                    
                    g_form.setValue('date', obj.date);
                    g_form.setValue('end_date', obj.end_date);
                    g_form.setValue('start_hours', obj.start_hour);
                    g_form.setValue('end_hours', obj.end_hour);
                    g_form.setValue('start_minutes', obj.start_min);
                    g_form.setValue('end_minutes', obj.end_min);
					
					var startTime = obj.start_hour + ':' + obj.start_min;
					var endTime = obj.end_hour + ':' + obj.end_min;
					g_form.setValue('start_time', startTime);
					g_form.setValue('end_time', endTime);
                } else if (g_form.getValue('date') != undefined) {
                    
                    g_form.setValue('date', obj.start_dt);
                    
                }
                
                g_form.setValue('requester', obj.requester);
                g_form.setValue('room', obj.room);
                g_form.setValue('location', obj.location);
                g_form.setValue('description', obj.meeting_subject);
                g_form.setReadOnly('requester', true);
                g_form.setReadOnly('costcenter', true);
                g_form.setReadOnly('location', true);
                g_form.setReadOnly('room', true);
                g_form.setMandatory('date', false);
                g_form.setReadOnly('date', true);
                if (g_form.getValue('end_date') != undefined) {
                    g_form.setMandatory('end_date', false);
                    g_form.setReadOnly('end_date', true);
                }
                g_form.setValue('costcenter', obj.costcenter);
                if (reservation.recurring == 'true') g_form.setValue('fmsystem_recurring', obj.recurring);
                
            }
            
        });
        
    }
    
}

function setRPVariables(obj) {
    var setRPVar = function (){
		for (var key in rpv) {
			var value = rpv[key];
			g_form.setValue(key + '', value);
		}
	};
    var rpv = obj.rp_variables? setRPVar(obj.rp_variables) : '';
}

function getItemReservation(orderSysID){
	
	var foAjax = new GlideAjax('FMFOrderAjaxUtils');
	foAjax.addParam('sysparm_name', 'getItemReservation');
	foAjax.addParam('sysparm_orderID', orderSysID);
	foAjax.getXML(function (response){

        var answer = response.responseXML.documentElement.getAttribute('answer');
        var obj = JSON.parse(answer);

        if (answer){
            g_form.setValue('item', obj.item + '');
            g_form.setValue('quantity', parseInt(obj.qty));
			console.log('Just set the qty');
        }
    });
}
]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>david.neves</sys_created_by>
        <sys_created_on>2017-04-19 17:04:17</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>2bd2dce00f9afa0011bec3ace1050e20</sys_id>
        <sys_mod_count>117</sys_mod_count>
        <sys_name>Load Update  Order</sys_name>
        <sys_overrides/>
        <sys_package display_value="Facility Management Accelerator" source="x_lsmcb_fm">e080882f0f9d224011bec3ace1050ee5</sys_package>
        <sys_policy/>
        <sys_scope display_value="Facility Management Accelerator">e080882f0f9d224011bec3ace1050ee5</sys_scope>
        <sys_update_name>catalog_script_client_2bd2dce00f9afa0011bec3ace1050e20</sys_update_name>
        <sys_updated_by>daniel.baeta</sys_updated_by>
        <sys_updated_on>2018-09-11 13:40:44</sys_updated_on>
        <table/>
        <type>onLoad</type>
        <ui_type>0</ui_type>
        <variable_set display_value="Product Order Record Producer">90f81ead0f67620011bec3ace1050e50</variable_set>
        <view/>
    </catalog_script_client>
</record_update>
