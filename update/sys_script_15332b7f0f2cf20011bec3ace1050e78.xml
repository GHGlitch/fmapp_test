<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_lsmcb_fm_room_reservation</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_lsmcb_fm_room_reservation">stateNOT IN3,4,0,1^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="NOT IN" or="false" value="3,4,0,1"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Check Room Availability</name>
        <order>400</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	if (current.number != gs.getMessage('fm_space_is_closed')) {
		
		var newStartTime = new GlideDateTime();
		newStartTime.setValue(current.start_time);
		var newEndTime = new GlideDateTime();
		newEndTime.setValue(current.end_time);
		
		var grReservations = new GlideRecord('x_lsmcb_fm_room_reservation');
		grReservations.addQuery('room', current.room);
		grReservations.addQuery('sys_id', '!=', current.sys_id);
		grReservations.addQuery('state', '!=', '0');
		grReservations.addQuery('state', '!=', '1');
		grReservations.addQuery('state', '!=', '3');
		grReservations.addQuery('end_time', '>', newStartTime);
		grReservations.addQuery('start_time', '<', newEndTime);
		grReservations.query();
		
		if (grReservations.hasNext()) {
			
			// Cancel the meeting on Outlook as well
			if (gs.getProperty('x_lsmcb_fm.calendar_integration') != 'disabled' && current.outlook_id != '') {
		
				// Set the reservation's state as "Tentative"
				current.state = '3';
				
			} else {
			
				gs.addErrorMessage(gs.getMessage('fm_room_not_available'));
				current.setAbortAction(true);
			}
		}
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>david.neves</sys_created_by>
        <sys_created_on>2017-02-02 11:06:55</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>15332b7f0f2cf20011bec3ace1050e78</sys_id>
        <sys_mod_count>34</sys_mod_count>
        <sys_name>Check Room Availability</sys_name>
        <sys_overrides/>
        <sys_package display_value="Facility Management Accelerator" source="x_lsmcb_fm">e080882f0f9d224011bec3ace1050ee5</sys_package>
        <sys_policy/>
        <sys_scope display_value="Facility Management Accelerator">e080882f0f9d224011bec3ace1050ee5</sys_scope>
        <sys_update_name>sys_script_15332b7f0f2cf20011bec3ace1050e78</sys_update_name>
        <sys_updated_by>diogo.costa</sys_updated_by>
        <sys_updated_on>2018-07-06 08:23:52</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=15332b7f0f2cf20011bec3ace1050e78"/>
</record_update>
